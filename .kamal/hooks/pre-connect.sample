#!/usr/bin/env ruby
# Pre-connect check: warms up DNS for all hosts before connecting in parallel.

require "socket"
require "benchmark"

# Get the list of hosts from the environment variable
hosts = (ENV["KAMAL_HOSTS"] || "").split(",").reject(&:empty?)
results = nil
max = 3  # Maximum retry attempts per host

# Measure how long DNS warmup takes
elapsed = Benchmark.realtime do
  results = hosts.map do |host|
    Thread.new do
      tries = 1

      begin
        # Attempt to resolve the host
        Socket.getaddrinfo(host, 0, Socket::AF_UNSPEC, Socket::SOCK_STREAM, nil, Socket::AI_CANONNAME)
      rescue SocketError
        if tries < max
          puts "Retrying DNS warmup: #{host}"
          tries += 1
          sleep rand  # Random short delay before retrying
          retry
        else
          puts "DNS warmup failed: #{host}"
          host
        end
      end

      tries  # Return number of attempts for this host
    end
  end.map(&:value)
end

# Summarize results
retries = results.sum - hosts.size
failures = results.count { |r| r == max }

puts "Prewarmed %d DNS lookups in %.2f sec: %d retries, %d failures" % [hosts.size, elapsed, retries, failures]
